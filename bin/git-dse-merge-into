#!/usr/bin/env bash
set -o errexit
set -o pipefail

progname="$(basename "$0")"
dirname="$(dirname "$0")"

. "${dirname}/../share/bash-getlongopts/getlongopts.sh"
. "${dirname}/../share/git-scripts/git-scripts.sh"

temp="$(mktemp)"

main () {
    if (( $# < 1 )) ; then
        >&2 echo "usage: git merge-into <dest-branch>"
        exit 1
    fi

    git status --no-ahead-behind --short >"${temp}"

    if grep . "${temp}" >/dev/null 2>/dev/null ; then croak 1 <<EOF
        |
        |*** You have uncommitted, unstaged, and/or untracked changes/files.
        |    Please remedy this before running 'git merge-into'.
        |    Use 'git stash -u' to include untracked files when stashing.
EOF
    fi

    local dest source

    dest="$1"
    source="$(git rev-parse --abbrev-ref HEAD)"

    >&2 echo "+ git checkout ${dest}"
    git checkout "${dest}" || croak $? "${source}" <<EOF
        |
        |*** \`git checkout ${dest}\` failed.
EOF

    >&2 echo "+ git pull"
    git pull || croak $? "${source}" <<EOF
        |
        |*** \`git pull\` into ${dest} failed.
EOF

    >&2 echo "+ git merge --no-edit ${source}"
    git merge --no-edit "${source}" || croak $? "${source}" <<EOF
        |
        |*** \`git merge --no-edit ${source}\` into ${dest} failed.
EOF

    >&2 echo "+ git push"
    git push || croak $? "${source}" <<EOF
        |
        |*** checkout and merge successful, but \`git push\` from ${dest} failed.
EOF

    >&2 echo "+ git checkout ${source}"
    git checkout "${source}" || croak $? "${source}" <<EOF
        |
        |*** checkout, merge, and push successful, but \`git checkout ${source}\` failed.
EOF

    sendoff <<EOF
        |
        |*** ALL DONE.  :-)
EOF
}

###############################################################################

main "$@"
