#!/usr/bin/env bash
set -o errexit
set -o pipefail
set -o nounset
# set -o xtrace
shopt -s lastpipe

PROGNAME="$(basename "$0")"

# h/t https://stackoverflow.com/questions/20433867/git-ahead-behind-info-between-master-and-branch

temp="$(mktemp)"
temp2="$(mktemp)"

main () {
    local quiet=0
    local allBranches=0
    local trace=0
    local TAB=$'\t'

    local OPTARG OPTIND=1 OPTERR=1 OPTION
    while getopts 'qhBx' OPTION ; do
        case "${OPTION}" in
            'q') quiet=1;;
            'B') allBranches=1;;
            'h') usage; exit 0;;
            'x') trace=1;;
            '?') exit 1;;           # or return 1 inside a function
        esac
    done
    shift $((OPTIND - 1))

    local -a args=("$@")

    local ab
    case "${PROGNAME}" in
        git-ahead)
            ab=--left-only
            ;;
        git-behind)
            ab=--right-only
            ;;
    esac

    local -a branches=()
    local -a revListArguments=()
    local i
    local numRevisions
    if (( allBranches )) ; then
        git --no-pager branch --list --no-color --no-column | cut -c3- | mapfile -t branches
        for i in "${branches[@]}" ; do
            if (( quiet )) ; then
                if ! run git rev-list "${ab}" --count "${i}...remotes/origin/${i}" | sed -n '/^0$/d;s/$/'"${TAB}${i//\//\\\/}"'/;p' ; then
                    echo ":-(${TAB}${i}"
                fi
            else
                if ! run git rev-list "${ab}" --count "${i}...remotes/origin/${i}" | sed -n 's/$/'"${TAB}${i//\//\\\/}"'/;p' ; then
                    echo ":-(${TAB}${i}"
                fi
            fi
        done
    else
        if (( ! $# )) ; then
            args=(master...remotes/origin/master)
        fi
        for i in "${args[@]}" ; do
            case "${i}" in
                *...*)
                    :
                    ;;
                *)
                    i="${i}...remotes/origin/${i}"
                    ;;
            esac
            if (( quiet )) ; then
                if ! run git rev-list "${ab}" --count "${i}" | sed -n '/^0$/d;p' ; then
                    echo ":-(${TAB}${i}"
                fi
            else
                if ! run git rev-list "${ab}" --count "${i}" ; then
                    echo ":-(${TAB}${i}"
                fi
            fi
        done
    fi
}

usage () { cat <<EOF; }
usage:
    ${PROGNAME} [-q] [<branch>...<branch>]
options:
    -q      don't output if zero revisions ahead
EOF

run () {
    (( trace )) && >&2 echo '+' "$@"
    "$@"
}

###############################################################################
main "$@"
