#!/usr/bin/env bash
set -o errexit
set -o pipefail

progname="$(basename "$0")"
dirname="$(dirname "$0")"

. "${dirname}/../share/bash-getlongopts/getlongopts.sh"
. "${dirname}/../share/git-scripts/git-scripts.sh"

main () {
    if (( porcelain )) ; then
        echo "#NEEDS_PUSH_AND_OR_PR"
    else
        echo "Needs push to upstream and/or pull request:"
    fi
    run git for-each-branch ab "${git_ab_options[@]}" --ahead '{local}' '{remote}' origin/develop

    if (( porcelain )) ; then
        echo "#NEEDS_PULL_FROM_UPSTREAM"
    else
        echo "Needs \`git pull\` from upstream:"
    fi
    run git for-each-branch ab "${git_ab_options[@]}" --behind '{local}' '{remote}'

    if (( porcelain )) ; then
        echo "#NEEDS_PULL_FROM_ORIGIN_DEVELOP"
    else
        echo "Needs \`git pull\` from origin/develop:"
    fi
    run git for-each-branch --exclude=master ab "${git_ab_options[@]}" --behind '{local}' 'origin/develop'
}

usage () { cat <<EOF; }
usage:
  ${progname} [<option> ...]
options:
  -z, --zero       show all ahead/behind counts including zeroes
      --porcelain  computer friendly format
      --tabs       with --porcelain, use tab separator
  -h, --help       show this message
  -n, --dry-run    take no action (if applicable)
  -v, --verbose    additional output (if applicable)
EOF

declare -a git_ab_options

git_ab_options=()
porcelain=0
tabs=0
zero=0

dry_run=0
verbose=0

declare -a longoptions
longoptions=(
    zero      0
    porcelain 0
    tabs      0
    help      0
    dry-run   0
    verbose   0
)

check_options () {
    local OPTION

    while getlongopts 'hnvz' OPTION "${longoptions[@]}" -- "$@" ; do
        case "${OPTION}" in
            z|zero)
                zero=1
                git_ab_options+=("--zero")
                ;;
            porcelain)
                porcelain=1
                git_ab_options+=("--porcelain")
                ;;
            tabs)
                tabs=1
                git_ab_options+=("--tabs")
                ;;

            h|help)
                usage; exit 0;;
            n|dry-run)
                dry_run=1;;
            v|verbose)
                verbose=$((verbose + 1));;
            "?")
                exit 1;;
            ??*)                # length >= 2
                >&2 echo "${progname}: invalid option: --${OPTION}"; exit 1;;
            *)                  # length < 2
                >&2 echo "${progname}: invalid option: -${OPTION}"; exit 1;;
        esac
    done
}

###############################################################################

check_options "$@"
shift $((OPTIND - 1))
main "$@"
